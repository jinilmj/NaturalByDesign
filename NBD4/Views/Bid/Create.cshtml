@model NBD4.Models.Bid

<partial name="_ViewHeading" />

<hr />
<form asp-action="Create">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label asp-for="BidDate" class="control-label"></label>
                <input asp-for="BidDate" class="form-control" value="@DateTime.Today.ToString("yyyy-MM-dd")" />
                <span asp-validation-for="BidDate" class="text-danger"></span>
            </div>
            
            <div class="form-group">
                <label asp-for="ProjectID" class="control-label">Project</label>
                <input type="hidden" id="projectId" name="ProjectID" />
                <input type="text" id="projectSearch" class="form-control" placeholder="Search for a project" />
                <div id="projectDropdown" class="dropdown-menu" aria-labelledby="projectSearch"></div>
                <span asp-validation-for="ProjectID" class="text-danger"></span>
            </div>
            
            <div class="form-group" style="display:none;">
                <label asp-for="BidAmount" class="control-label"></label>
                <input asp-for="BidAmount" class="form-control" value ="0"/>
                <span asp-validation-for="BidAmount" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label">@Html.DisplayNameFor(model => model.BidStaffs)</label>
                <div class="m-2">
                    <table>
                        <tr>
                            @{
                                int cnt = 0;
                                List<NBD4.ViewModels.CheckOptionVM> checkboxes = ViewBag.StaffOptions;
                                
                                if (checkboxes != null)
                                {
                                     foreach (var checkbox in checkboxes)
                                {
                                    if (cnt++ % 2 == 0)
                                    {
                                    @:</tr><tr>
                                    }
                                    @:<td>
                                        <input type="checkbox"
                                               name="selectedStaffOptions"
                                               value="@checkbox.ID"
                                               @(Html.Raw(checkbox.Assigned ? "checked=\"checked\"" : "")) />
                                        @checkbox.DisplayText @:&nbsp;&nbsp;
                                    @:</td>
                                }
                                }
                               
                        @:</tr>
                        }
                    </table>
                </div>
            </div>

            <div class="form-group">
                <label class="control-label">Labour and Hours</label>
                <div class="m-2">
                    <table>
                        <thead>
                            <tr>
                                <th style=" width: 250px;">Labour</th>
                                <th style="width:100px;">Hours</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                List<NBD4.ViewModels.CheckOptionVM> checkboxes1 = ViewBag.LabourTypeInfoOptions;
                                foreach (var checkbox in checkboxes1)
                                {
                                    <tr>
                                        <td>
                                            <input type="checkbox"
                                                   name="selectedLabourOptions"
                                                   value="@checkbox.ID"
                                                   @(Html.Raw(checkbox.Assigned ? "checked=\"checked\"" : "")) />
                                            @checkbox.DisplayText

                                        </td>
                                        <td>
                                            <input class="form-control" type="number"
                                                   name="selectedLabourHours[@checkbox.ID]"
                                                   value="@checkbox.Hours"
                                                   min="0"
                                                   oninput="this.value = Math.abs(this.value)"/>
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="form-group form-check" style="display:none;">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="BidNBDApproved" /> @Html.DisplayNameFor(model => model.BidNBDApproved)
                </label>
            </div>
            <div class="form-group" style="display:none;">
                <label asp-for="BidNBDApprovalNotes" class="control-label"></label>
                <input asp-for="BidNBDApprovalNotes" class="form-control" />
                <span asp-validation-for="BidNBDApprovalNotes" class="text-danger"></span>
            </div>
            <div class="form-group form-check" style="display:none;">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="BidClientApproved" /> @Html.DisplayNameFor(model => model.BidClientApproved)
                </label>
            </div>
            <div class="form-group" style="display:none;">
                <label asp-for="BidClientApprovalNotes" class="control-label"></label>
                <input asp-for="BidClientApprovalNotes" class="form-control" />
                <span asp-validation-for="BidClientApprovalNotes" class="text-danger"></span>
            </div>
            <div class="form-group form-check" style="display:none;">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="BidMarkForRedesign" /> @Html.DisplayNameFor(model => model.BidMarkForRedesign)
                </label>
            </div>
            <div class="form-group" style="display:none;">
                <label asp-for="BidMarkForRedisignNotes" class="control-label"></label>
                <input asp-for="BidMarkForRedisignNotes" class="form-control" />
                <span asp-validation-for="BidMarkForRedisignNotes" class="text-danger"></span>
            </div>
            <div class="form-group" style="display:none;">
                <label asp-for="ReviewDate" class="control-label"></label>
                <input asp-for="ReviewDate" class="form-control" />
                <span asp-validation-for="ReviewDate" class="text-danger"></span>
            </div>
            <div class="form-group" style="display:none;">
                <label asp-for="ReviewedBy" class="control-label"></label>
                <input asp-for="ReviewedBy" class="form-control" />
                <span asp-validation-for="ReviewedBy" class="text-danger"></span>
            </div>
           
        </div>
        <div class="col-md-6">
            <div class="row">
                <div class="form-group">
                    <label class="control-label">Materials and Quantities</label>
                    <div class="m-2">
                        <table id="materialsTablePlant">
                            <thead>
                                <tr>
                                    <th style="width: 350px;">Plants</th>
                                    <th style="width:100px;">Quantity</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>
                                        <select id="materialDropdownPlant" class="form-control">
                                            <option value="">Select Plant</option>
                                            @foreach (var inventoryOption in ViewBag.InventoryOptionsPlant)
                                            {
                                                <option value="@inventoryOption.ID">@inventoryOption.DisplayText</option>
                                            }
                                        </select>
                                    </td>
                                    <td>
                                        <input type="number" id="quantityInputPlant" class="form-control" name="selectedInventoryQuantitiesPlant[@((ViewBag.InventoryOptionsPlant.Count > 0 ? ViewBag.InventoryOptionsPlant[0].ID : ""))]" min="0" oninput="this.value = Math.abs(this.value)"/>
                                
                                    </td>
                                    <td>
                                        <button class="btn btn-danger btn-sm removeRowBtnPlant">Remove</button>
                                        <button id="addRowBtnPlant" class="button-10 ">Add </button>
                                    </td>
                                </tr>
                            </tbody>
                        </table>

                        <table id="materialsTablePottery">
                            <thead>
                                <tr>
                                    <th style="width: 350px;">Pottery</th>
                                    <th style="width:100px;">Quantity</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>
                                        <select id="materialDropdownPottery" class="form-control">
                                            <option value="">Select Pottery</option>
                                            @foreach (var inventoryOption in ViewBag.InventoryOptionsPottery)
                                            {
                                                    <option value="@inventoryOption.ID">@inventoryOption.DisplayText</option>
                                            }
                                        </select>
                                    </td>
                                    <td>
                                        <input type="number" id="quantityInputPottery" class="form-control" name="selectedInventoryQuantitiesPottery[@((ViewBag.InventoryOptionsPottery.Count > 0 ? ViewBag.InventoryOptionsPottery[0].ID : ""))]" min="0" oninput="this.value = Math.abs(this.value)" />

                                    </td>
                                    <td>
                                        <button class="btn btn-danger btn-sm removeRowBtnPottery">Remove</button>
                                        <button id="addRowBtnPottery" class="button-10 ">Add </button>
                                    </td>
                                </tr>
                            </tbody>
                        </table>

                        <table id="materialsTableOther">
                            <thead>
                                <tr>
                                    <th style="width: 350px;">Other</th>
                                    <th style="width:100px;">Quantity</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>
                                        <select id="materialDropdownOther" class="form-control">
                                            <option value="">Select Other</option>
                                            @foreach (var inventoryOption in ViewBag.InventoryOptionsOther)
                                            {
                                                    <option value="@inventoryOption.ID">@inventoryOption.DisplayText</option>
                                            }
                                        </select>
                                    </td>
                                    <td>
                                        <input type="number" id="quantityInputOther" class="form-control" name="selectedInventoryQuantitiesOther[@((ViewBag.InventoryOptionsOther.Count > 0 ? ViewBag.InventoryOptionsOther[0].ID : ""))]" min="0" oninput="this.value = Math.abs(this.value)" />

                                    </td>
                                    <td>
                                        <button class="btn btn-danger btn-sm removeRowBtnOther">Remove</button>
                                        <button id="addRowBtnOther" class="button-10 ">Add </button>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

 
    </div>
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
</form>
<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="~/js/multiselect.js"></script>
    <script>

        $(document).ready(function () {
            $('#projectDropdown').hide();
        });

        $('#projectSearch').click(function () {
            var searchString = $('#projectSearch').val();
            if (searchString === '') {
                $.ajax({
                    url: '/Bid/GetProjects',
                    type: 'GET',
                    data: { searchString: searchString },
                    success: function (data) {
                        var dropdown = $('#projectDropdown');
                        dropdown.empty();
                        $.each(data, function (key, entry) {
                            dropdown.append($('<a class="dropdown-item" href="#">').attr('data-id', entry.id).text(entry.name));
                        });
                        dropdown.show();
                    }
                });
            } else {
                $('#projectDropdown').show(); 
            }
        });

        $(document).click(function (e) {
            if (!$(e.target).closest('#projectSearch').length) {
                $('#projectDropdown').hide(); 
            }
        });

        $('#projectSearch').on('input', function () {
            var searchString = $(this).val();
            $.ajax({
                url: '/Bid/GetProjects',
                type: 'GET',
                data: { searchString: searchString },
                success: function (data) {
                    var dropdown = $('#projectDropdown');
                    dropdown.empty();
                    $.each(data, function (key, entry) {
                        dropdown.append($('<a class="dropdown-item" href="#">').attr('data-id', entry.id).text(entry.name));
                    });
                    dropdown.show();
                }
            });
        });

        $('#projectDropdown').on('click', '.dropdown-item', function () {
            var ProjectId = $(this).data('id');
            var siteName = $(this).text();
            $('#projectSearch').val(siteName);
            $('#projectId').val(ProjectId);
            $('#projectDropdown').hide(); 
        });

    </script>
<script>
//////////////////////////////////// MATERIAL STUFF //////////////////////////////////
$(document).ready(function () {
    $('#addRowBtnPlant').click(function (e) {
        e.preventDefault(); // Prevent the default form submission behavior

        var materialId = $('#materialDropdownPlant').val();
        var materialName = $('#materialDropdownPlant option:selected').text();
        var quantity = $('#quantityInputPlant').val();

        if (materialId && quantity) {
            var rowCount = $('#materialsTablePlant tbody tr').length;
            var removeBtnHtml = '';
            if (rowCount > 0) {
                removeBtnHtml = '<button class="btn btn-danger btn-sm removeRowBtnPlant">Remove</button>';
            }

            $('#materialsTablePlant tbody').append(
                '<tr>' +
                '<td>' + materialName + '<input type="hidden" name="selectedOptions" value="' + materialId + '"></td>' +
                '<td><input type="number" class="form-control" name="selectedInventoryQuantitiesPlant[' + materialId + ']" value="' + quantity + '" min="0"></td>' +
                '<td>' + removeBtnHtml + '</td>' +
                '</tr>'
            );

            $('#materialDropdownPlant').val('');
            $('#quantityInputPlant').val('');
        }
    });

    // Remove row when remove button is clicked
    $('#materialsTablePlant tbody').on('click', '.removeRowBtnPlant', function () {
        $(this).closest('tr').remove();
    });

    // Prevent form submission on Enter key press in quantity input
    $('#quantityInputPlant').keydown(function (e) {
        if (e.keyCode == 13) {
            e.preventDefault();
            $('#addRowBtnPlant').click(); // Simulate click
        }
    });

    // Hide Remove button in the first row
    $('#materialsTablePlant tbody tr:first-child .removeRowBtnPlant').hide();
});

/////////////////////////////////////

$(document).ready(function () {
    $('#addRowBtnPottery').click(function (e) {
        e.preventDefault(); // Prevent the default form submission behavior

        var materialId = $('#materialDropdownPottery').val();
        var materialName = $('#materialDropdownPottery option:selected').text();
        var quantity = $('#quantityInputPottery').val();

        if (materialId && quantity) {
            var rowCount = $('#materialsTablePottery tbody tr').length;
            var removeBtnHtml = '';
            if (rowCount > 0) {
                removeBtnHtml = '<button class="btn btn-danger btn-sm removeRowBtnPottery">Remove</button>';
            }

            $('#materialsTablePottery tbody').append(
                '<tr>' +
                '<td>' + materialName + '<input type="hidden" name="selectedOptions" value="' + materialId + '"></td>' +
                '<td><input type="number" class="form-control" name="selectedInventoryQuantitiesPottery[' + materialId + ']" value="' + quantity + '" min="0"></td>' +
                '<td>' + removeBtnHtml + '</td>' +
                '</tr>'
            );

            $('#materialDropdownPottery').val('');
            $('#quantityInputPottery').val('');
        }
    });

    // Remove row when remove button is clicked
    $('#materialsTablePottery tbody').on('click', '.removeRowBtnPottery', function () {
        $(this).closest('tr').remove();
    });

    // Prevent form submission on Enter key press in quantity input
    $('#quantityInputPottery').keydown(function (e) {
        if (e.keyCode == 13) {
            e.preventDefault();
            $('#addRowBtnPottery').click(); // Simulate click
        }
    });

    // Hide Remove button in the first row
    $('#materialsTablePottery tbody tr:first-child .removeRowBtnPottery').hide();
});

    /////////////////////////////////////

$(document).ready(function () {
    $('#addRowBtnOther').click(function (e) {
        e.preventDefault(); // Prevent the default form submission behavior

        var materialId = $('#materialDropdownOther').val();
        var materialName = $('#materialDropdownOther option:selected').text();
        var quantity = $('#quantityInputOther').val();

        if (materialId && quantity) {
            var rowCount = $('#materialsTableOther tbody tr').length;
            var removeBtnHtml = '';
            if (rowCount > 0) {
                removeBtnHtml = '<button class="btn btn-danger btn-sm removeRowBtnOther">Remove</button>';
            }

            $('#materialsTableOther tbody').append(
                '<tr>' +
                '<td>' + materialName + '<input type="hidden" name="selectedOptions" value="' + materialId + '"></td>' +
                '<td><input type="number" class="form-control" name="selectedInventoryQuantitiesOther[' + materialId + ']" value="' + quantity + '" min="0"></td>' +
                '<td>' + removeBtnHtml + '</td>' +
                '</tr>'
            );

            $('#materialDropdownOther').val('');
            $('#quantityInputOther').val('');
        }
    });

    // Remove row when remove button is clicked
    $('#materialsTableOther tbody').on('click', '.removeRowBtnOther', function () {
        $(this).closest('tr').remove();
    });

    // Prevent form submission on Enter key press in quantity input
    $('#quantityInputOther').keydown(function (e) {
        if (e.keyCode == 13) {
            e.preventDefault();
            $('#addRowBtnOther').click(); // Simulate click
        }
    });

    // Hide Remove button in the first row
    $('#materialsTableOther tbody tr:first-child .removeRowBtnOther').hide();
});

//////////////////////////////////// END OF MATERIAL STUFF //////////////////////////////////
</script>

}
